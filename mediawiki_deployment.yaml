- hosts: localhost
  connection: local
  become: yes
  roles:
  - mediawiki

- hosts: launched
  remote_user: ec2-user
  become: yes
  gather_facts: yes
  tasks:
  - name: ensure a list of packages installed
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - httpd
      - php
      - php-mysql
      - php-gd
      - php-xml
  - name: Unarchive a file MediaWiki
    unarchive:
      src: https://releases.wikimedia.org/mediawiki/1.26/mediawiki-1.26.0.tar.gz
      dest: /home/ec2-user/
      owner: apache
      group: apache
      remote_src: yes
  - name: Give others execute permission
    file:
      path: /home/ec2-user/
      mode: o=rx
      recurse: yes
  - name: Soft link to mediawiki root
    file:
      src: /home/ec2-user/mediawiki-1.26.0
      dest: /var/www/mediawiki
      owner: apache
      group: apache
      state: link
  - selinux:
      policy: targeted
      state: enforcing
  - command: restorecon -FR /var/www/mediawiki
  - name: Set httpd_can_network_connect_db flag on and keep it persistent across reboots
    seboolean:
      name: httpd_can_network_connect_db
      state: yes
      persistent: yes
  - name: Set httpd_read_user_content flag on and keep it persistent across reboots
    seboolean:
      name: httpd_read_user_content
      state: yes
      persistent: yes
  - name: changing http config file
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^DocumentRoot'
      line: 'DocumentRoot "/var/www"'
  - name: Insert Directory block
    blockinfile:
      path: /etc/httpd/conf/httpd.conf
      marker: "# ANSIBLE MANAGED BLOCK"
      insertafter: "DocumentRoot \"/var/www\""
      content: |
         <Directory "/var/www/mediawiki">
            AllowOverride None
            Options +ExecCGI +FollowSymlinks -SymLinksIfOwnerMatch
            Require all granted
         </Directory>
  - lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^    DirectoryIndex'
      line: '    DirectoryIndex index.html index.html.var index.php'
  - name: enable service httpd and ensure it is not masked
    systemd:
      name: httpd
      enabled: yes
      state: started
  
